package ChoiceLanguage.refactorings;

/*Generated by MPS */

import jetbrains.mps.refactoring.framework.BaseRefactoring;
import jetbrains.mps.refactoring.framework.IRefactoringTarget;
import jetbrains.mps.refactoring.framework.RefactoringContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class ChangeState extends BaseRefactoring {
  public ChangeState() {
    this.addTransientParameter("newState");
  }
  public IRefactoringTarget getRefactoringTarget() {
    return new ChangeState_Target();
  }
  public String getUserFriendlyName() {
    return "ChangeState";
  }
  public boolean init(final RefactoringContext refactoringContext) {
    return true;
  }
  public void refactor(final RefactoringContext refactoringContext) {
    SPropertyOperations.set(refactoringContext.getSelectedNode(), MetaAdapterFactory.getProperty(0xa92e5bf9eea84a4cL, 0x99848f946109148dL, 0x38b572bec4972be3L, 0x38b572bec4972be4L, "state"), ((String) refactoringContext.getParameter("newState")));
  }
}
