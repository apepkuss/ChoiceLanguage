package ChoiceLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptChoice = new ConceptDescriptorBuilder("ChoiceLanguage.structure.Choice", MetaIdFactory.conceptId(0xa92e5bf9eea84a4cL, 0x99848f946109148dL, 0x5677359a7e047e87L)).super_("ChoiceLanguage.structure.Variational").super_(MetaIdFactory.conceptId(0xa92e5bf9eea84a4cL, 0x99848f946109148dL, 0x5677359a7e047e4bL)).parents("ChoiceLanguage.structure.Variational").parentIds(MetaIdFactory.conceptId(0xa92e5bf9eea84a4cL, 0x99848f946109148dL, 0x5677359a7e047e4bL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(6230507547145831063L, "demension")).properties("demension").childDescriptors(new ConceptDescriptorBuilder.Link(6230507547145831045L, "alt1", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940d22479L), false, false, false), new ConceptDescriptorBuilder.Link(6230507547145831055L, "alt2", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940d22479L), false, false, false)).children(new String[]{"alt1", "alt2"}, new boolean[]{false, false}).alias("choice", "").create();
  /*package*/ final ConceptDescriptor myConceptConstant = new ConceptDescriptorBuilder("ChoiceLanguage.structure.Constant", MetaIdFactory.conceptId(0xa92e5bf9eea84a4cL, 0x99848f946109148dL, 0x5677359a7e047e8aL)).super_("ChoiceLanguage.structure.Variational").super_(MetaIdFactory.conceptId(0xa92e5bf9eea84a4cL, 0x99848f946109148dL, 0x5677359a7e047e4bL)).parents("ChoiceLanguage.structure.Variational").parentIds(MetaIdFactory.conceptId(0xa92e5bf9eea84a4cL, 0x99848f946109148dL, 0x5677359a7e047e4bL)).childDescriptors(new ConceptDescriptorBuilder.Link(6230507547145915920L, "value", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf940d22479L), false, false, false)).children(new String[]{"value"}, new boolean[]{false}).alias("constant", "").create();
  /*package*/ final ConceptDescriptor myConceptVariational = new ConceptDescriptorBuilder("ChoiceLanguage.structure.Variational", MetaIdFactory.conceptId(0xa92e5bf9eea84a4cL, 0x99848f946109148dL, 0x5677359a7e047e4bL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).abstract_().alias("variational", "").create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptChoice, myConceptConstant, myConceptVariational);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0h, conceptFqName)) {
      case 0:
        return myConceptChoice;
      case 1:
        return myConceptConstant;
      case 2:
        return myConceptVariational;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0h = new String[]{"ChoiceLanguage.structure.Choice", "ChoiceLanguage.structure.Constant", "ChoiceLanguage.structure.Variational"};
}
